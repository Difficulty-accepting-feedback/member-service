<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true">

    <!-- Spring Boot 기본 변수 포함 -->
    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>
    <springProperty scope="context" name="APP_NAME" source="spring.application.name"/>

    <!-- 로그 디렉토리/파일명 기본값 -->
    <property name="LOG_HOME" value="${LOG_PATH:-./logs}"/>
    <property name="MAX_HISTORY" value="30"/>
    <property name="MAX_FILE_SIZE" value="10MB"/>

    <!-- 콘솔 색상 로그 패턴 -->
    <property name="LOG_PATTERN"
              value="%cyan(%d{yyyy-MM-dd HH:mm:ss.SSS}) %highlight(%-5level) [%yellow(%thread)] [%magenta(%X{traceId:-})] %green(%logger{36}) - %msg%n"/>

    <!-- 콘솔 출력 -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
            <charset>UTF-8</charset>
            <encoder>
                <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg %X{traceId} %X{clientIp} %X{requestUri} %n</pattern>
            </encoder>
        </encoder>
    </appender>

    <!-- 일반 애플리케이션 로그 (롤링) -->
    <appender name="APP_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/${APP_NAME:-app}.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/archive/${APP_NAME:-app}.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
            <maxHistory>${MAX_HISTORY}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
            <encoder>
                <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg %X{traceId} %n</pattern>
            </encoder>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- LogstashTcpSocketAppender 추가: ELK EC2로 JSON 로그 전송 -->
    <appender name="LOGSTASH_TCP" class="net.logstash.logback.appender.LogstashTcpSocketAppender">
        <destination>http://monitoring-elk.groow.store:5001</destination>
        <connectionTimeout>5000</connectionTimeout>
        <keepAliveDuration>20 seconds</keepAliveDuration>
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <!-- JSON 필드: 타임스탬프, 레벨 등 기본 + MDC + 커스텀 message 패턴 -->
            <providers>
                <timestamp/>
                <logLevel/>
                <!-- message를 패턴으로 포맷팅: Spring Boot 가독성 형식 적용 -->
                <message>
                    <encoder class="net.logstash.logback.encoder.PatternLayoutJsonProvider">
                        <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{36} - %msg %n</pattern>
                        <charset>UTF-8</charset>
                    </encoder>
                </message>
                <loggerName/>
                <threadName/>
                <mdc/>  <!-- MDC(예: traceId, requestUri)를 JSON 필드로 포함: {"traceId": "abc123", "requestUri": "/api/users"} -->
                <contextName/>
                <version/>
            </providers>
        </encoder>
        <!-- 재연결 설정 -->
        <includeCallerData>true</includeCallerData>
    </appender>

    <!-- Hibernate 바인딩 파라미터 로그 전용 파일 -->
    <appender name="HIBERNATE_BIND_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/hibernate-bind.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/archive/hibernate-bind.%d{yyyy-MM-dd}.log</fileNamePattern>
            <maxHistory>7</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- Hibernate 바인딩 파라미터 TRACE 로그는 파일로만 저장 (콘솔에는 안 보임) -->
    <logger name="org.hibernate.orm.jdbc.bind" level="TRACE" additivity="false">
        <appender-ref ref="HIBERNATE_BIND_FILE"/>
    </logger>

    <!-- Hibernate SQL 로그는 콘솔/파일 둘 다 출력 -->
    <logger name="org.hibernate.SQL" level="DEBUG"/>

    <!-- Root Logger -->
    <root level="INFO">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="APP_FILE"/>
        <appender-ref ref="LOGSTASH_TCP"/>
    </root>

</configuration>
